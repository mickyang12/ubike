<!doctype html>
<html lang="zh-Hant">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Camera Preview with Live Watermark</title>
  <style>
    body { font-family: system-ui, Arial; padding: 16px; }
    canvas, img { width: 100%; max-width: 480px; display:block; margin-bottom: 12px; }
    video { display:none; }
    .row { display:flex; gap:10px; flex-wrap:wrap; align-items:center; }
    button { padding:10px 16px; }
    #status { margin-top:8px; white-space:pre-wrap; }
  </style>
</head>
<body>
  <h1>即時浮水印相機</h1>

  <!-- video 用來取流，隱藏 -->
  <video id="video" playsinline autoplay></video>
  <!-- 這個 canvas 是顯示用的，有浮水印 -->
  <canvas id="previewCanvas"></canvas>

  <div class="row">
    <button id="btnStart">開啟相機</button>
    <button id="btnShot">拍照</button>
    <button id="btnUpload">上傳 PNG</button>
  </div>

  <img id="photo" alt="拍照結果 (含浮水印)" />
  <pre id="status"></pre>

  <script>
    const video = document.getElementById('video');
    const previewCanvas = document.getElementById('previewCanvas');
    const ctx = previewCanvas.getContext('2d');

    const photo = document.getElementById('photo');
    const statusEl = document.getElementById('status');

    let stream = null;
    let lastPngBlob = null;
    let animId = null;

        const ASPNET_UPLOAD_URL = 'https://mick.servehttp.com/UploadCamera/UploadCamera.aspx'; // ← 換成你的實際網

    function log(msg) {
      statusEl.textContent = (statusEl.textContent ? statusEl.textContent + '\n' : '') + msg;
    }

    async function startCamera() {
      try {
        stream = await navigator.mediaDevices.getUserMedia({
          video: { facingMode: { ideal: 'environment' } },
          audio: false
        });
        video.srcObject = stream;

        video.onloadedmetadata = () => {
          previewCanvas.width = video.videoWidth;
          previewCanvas.height = video.videoHeight;
          drawLoop();
          log('相機已啟動，開始即時浮水印預覽');
        };
      } catch (err) {
        log('開啟相機失敗：' + err.message);
      }
    }

    function drawLoop() {
      ctx.drawImage(video, 0, 0, previewCanvas.width, previewCanvas.height);

      // === 即時浮水印 ===
      const now = new Date();
      const datetime = now.getFullYear() + "-" +
        String(now.getMonth() + 1).padStart(2, '0') + "-" +
        String(now.getDate()).padStart(2, '0') + " " +
        String(now.getHours()).padStart(2, '0') + ":" +
        String(now.getMinutes()).padStart(2, '0') + ":" +
        String(now.getSeconds()).padStart(2, '0');

      const line1 = datetime;
      const line2 = "當票編號：XXXX"; // ← 你可改成動態帶入

      ctx.globalAlpha = 0.65;
      ctx.fillStyle = "yellow";
      ctx.font = "24px Arial";
      ctx.textBaseline = "top";
      ctx.fillText(line1, 10, 10);
      ctx.fillText(line2, 10, 40);
      ctx.globalAlpha = 1.0;

      animId = requestAnimationFrame(drawLoop);
    }

    function shot() {
      previewCanvas.toBlob((blob) => {
        if (!blob) { log('產生 PNG 失敗'); return; }
        lastPngBlob = blob;
        const url = URL.createObjectURL(blob);
        photo.src = url;
        log(`已拍照：${Math.round(blob.size/1024)} KB (含浮水印)`);
      }, 'image/png', 1.0);
    }

async function upload() {
  if (!lastPngBlob) { log('尚未有可上傳的 PNG'); return; }
  try {
    const form = new FormData();
    form.append('file', lastPngBlob, `capture_${Date.now()}.png`);

    const resp = await fetch(ASPNET_UPLOAD_URL, { method: 'POST', body: form });
    if (!resp.ok) throw new Error(`${resp.status} ${resp.statusText}`);

    const data = await resp.json(); // 後端回 JSON
    log('上傳成功：\n' + JSON.stringify(data, null, 2));

    if (data.ok && data.url) {
      // 建立一個可點擊連結
      let linkEl = document.createElement('a');
      linkEl.href = data.url;
      linkEl.textContent = '點此檢視上傳的照片';
      linkEl.target = '_blank';

      const container = document.getElementById('status');
      container.appendChild(document.createElement('br')); // 換行
      container.appendChild(linkEl);
    }
  } catch (err) {
    log('上傳失敗：' + err.message);
  }
}


    document.getElementById('btnStart').addEventListener('click', startCamera);
    document.getElementById('btnShot').addEventListener('click', shot);
    document.getElementById('btnUpload').addEventListener('click', upload);
  </script>
</body>
</html>

